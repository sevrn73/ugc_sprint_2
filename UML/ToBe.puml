@startuml
!theme cerulean
title "Архитектура (As Is)"

actor Администратор as Admin
actor Пользователь as Client
actor "Системный администратор" as SystemAdmin
actor "Аналитик" as Analytic

package Nginx {
 component AdminPanelProxy 
 component MoviesServiceProxy
 component AuthServiceProxy
}
note top of Nginx
Веб-сервер для проксирования запросов
end note

package AdminPanel {
 component DjangoApp
 database MoviesDB
}
note top of AdminPanel
Сервис для администрирования контента
end note
DjangoApp --> MoviesDB : "CRUD операции\n с данными о фильмах"

package MoviesETL {
 component DB_to_ES
}
note top of MoviesETL
ETL процесс 
для загрузки и обновления контента
end note
DB_to_ES -up-> MoviesDB : "Чтение контента"

package MoviesService {
 database MoviesRedis
 database MoviesElastic
 component FastApi
}
note top of MoviesService
Сервис получения контента пользователем
end note
DB_to_ES --> MoviesElastic: "Актуализация контента"
FastApi --> MoviesElastic: "Чтение контента"
FastApi --> MoviesRedis: "Кэширование ответов и\n получение часто запрашиваемого контента"

package AuthService {
 component Flask
 database AuthDB
 database AuthRedis
 package Jaeger
}
note top of AuthService
Сервис регистрации,
 авторизации и аутентификации
end note
Flask --> AuthDB: "CRUD операции\n с данными о пользователях"
Flask --> AuthRedis: "Кэширование и проверка\n действительности токенов"
Flask --> Jaeger: "Логирование"
FastApi .right.> Flask: "Проверка\n токена"


package UGC {
 component UGCApi
 component ETL
 database Kafka
 database ClickHouse
}
note top of UGC
Сервис аналитики пользовательского поведения
end note
MoviesService --> UGCApi: "Отправка событий"
UGCApi ..> Flask: "Проверка\n токена"
UGCApi --> Kafka: "Первичное хранение событий"
ETL --> Kafka: "Обработка событий"
ETL --> ClickHouse: "Сохранение событий"

AdminPanelProxy --> DjangoApp
MoviesServiceProxy --> FastApi
AuthServiceProxy--> Flask

Admin --> AdminPanelProxy: "Администрирование\n контента"
SystemAdmin -up-> Jaeger: "Анализ логов"
Client --> MoviesServiceProxy
Client --> AuthServiceProxy
Analytic -up-> ClickHouse: "Анализ данных"
@enduml