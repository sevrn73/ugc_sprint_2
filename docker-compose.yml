version: "3.7"

services:
  nginx:
    image: nginx:1.23.2
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ./tmp/logs/nginx/:/var/log/nginx/
    depends_on:
      - ugc.kafka
      - ugc.kafka-ui
      - clickhouse-node1
      - ugc_api
      - etl
    ports:
      - "80:80"

  ugc.zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0-3-ubi8
    hostname: ugc.zookeeper
    container_name: ugc.zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ugc.kafka:
    image: confluentinc/cp-kafka:6.2.0-3-ubi8
    hostname: ugc.kafka
    container_name: ugc.kafka
    depends_on:
      - ugc.zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ugc.zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ugc.kafka:9092,PLAINTEXT_HOST://localhost:31204
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 10
    restart: on-failure

  ugc.kafka-ui:
    image: provectuslabs/kafka-ui
    hostname: ugc.kafka-ui
    container_name: ugc.kafka-ui
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ugc.kafka:9092
      KAFKA_CLUSTERS_0_NAME: ugc.kafka
      KAFKA_CLUSTERS_0_ZOOKEEPER: ugc.zookeeper:2181
    ports:
      - "31205:8080"

  ugc_api:
    container_name: ugc_api
    build:
      context: ./ugc/src
    env_file:
      - ./.env
    depends_on:
      - ugc.kafka
    ports:
      - "8001:8001"
    restart: on-failure

  clickhouse-node1:
    image: yandex/clickhouse-server:21.3
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    volumes:
      - ./clickhouse/node1:/etc/clickhouse-server
    depends_on:
      - ugc.zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:21.3
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhouse/node2:/etc/clickhouse-server
    depends_on:
      - ugc.zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:21.3
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./clickhouse/node3:/etc/clickhouse-server
    depends_on:
      - ugc.zookeeper
  clickhouse-node4:
    image: yandex/clickhouse-server:21.3
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhouse/node4:/etc/clickhouse-server
    depends_on:
      - ugc.zookeeper

  etl:
    container_name: etl
    build:
      context: ./etl
    env_file:
      - ./.env
    depends_on:
      - clickhouse-node1
      - ugc.kafka
    restart: on-failure

  mongors1n1:
    container_name: mongors1n1
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_data1:/data/db

  mongors1n2:
    container_name: mongors1n2
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_data2:/data/db

  mongors1n3:
    container_name: mongors1n3
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_data3:/data/db

  mongors2n1:
    container_name: mongors2n1
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_data4:/data/db

  mongors2n2:
    container_name: mongors2n2
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_data5:/data/db

  mongors2n3:
    container_name: mongors2n3
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_data6:/data/db

  mongocfg1:
    container_name: mongocfg1
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_config1:/data/db

  mongocfg2:
    container_name: mongocfg2
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_config2:/data/db

  mongocfg3:
    container_name: mongocfg3
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro
      - ugc_mongo_cluster_config3:/data/db

  mongos1:
    container_name: mongos1
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
      - mongocfg3
      - mongors1n1
      - mongors1n2
      - mongors1n3
      - mongors2n1
      - mongors2n2
      - mongors2n3
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - 27017:27017
    expose:
      - "27017"
    volumes:
      - ./scripts:/scripts
      - /etc/localtime:/etc/localtime:ro

  logstash:
    image: logstash:7.17.9
    depends_on:
      - elasticsearch
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "elasticsearch:9200"
    volumes:
      - ./elk/logstash.conf:/config/logstash.conf:ro
    command: logstash -f /config/logstash.conf

  elasticsearch:
    image: elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms265m -Xmx265m"
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: kibana:7.17.9
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
    depends_on:
      - elasticsearch

  filebeat:
    image: elastic/filebeat:6.8.3
    command: filebeat -e -strict.perms=false
    volumes:
      - ./tmp/logs/nginx:/var/log/nginx/:ro
      - ./elk/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - nginx
      - logstash
      - elasticsearch
      - kibana
      - ugc_api



volumes:
  ugc_mongo_cluster_data1:
  ugc_mongo_cluster_data2:
  ugc_mongo_cluster_data3:
  ugc_mongo_cluster_data4:
  ugc_mongo_cluster_data5:
  ugc_mongo_cluster_data6:
  ugc_mongo_cluster_config1:
  ugc_mongo_cluster_config2:
  ugc_mongo_cluster_config3:

